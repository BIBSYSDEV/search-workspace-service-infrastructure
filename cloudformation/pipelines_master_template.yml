AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'

Description: >
  Version 1.0 CI/CD pipelines master template

  Creates a CI/CD pipeline for all applications.

Parameters:
  S3Bucket:
    Type: String
    Default: sws-infrastructure-dev
    Description: S3 bucket holding the CI/CD pipeline template.
  S3Region:
    Type: String
    Description: Region for S3 bucket holding the CI/CD pipeline template.
    Default: eu-west-1
  UseManualApproval:
    Type: String
    Default: false
    AllowedValues:
      - true
      - false
  ElasticSearchSize:
    Type: String
    Default: small
    AllowedValues:
      - small
      - large
  UserPoolDomainPrefix:
    Type: String
    Description: The prefix for the Cognito domain. Must be globaly unique
    Default: sws-auth-dev
  ApiDomain:
    Type: String
    Description: The domain of the SWS Backend related services. This part of the domain is common to both backend and frontend services. Eg. api.dev.sws.aws.sikt.no or api.sws.aws.sikt.no.
    Default: api.dev.sws.aws.sikt.no
    AllowedValues:
      - api.dev.sws.aws.sikt.no
      - api.sandbox.sws.aws.sikt.no
      - api.sws.aws.sikt.no
  CustomDomain:
    Type: String
    Description: The domain of the SWS related services. Domain for the enviorment without service related prefix (api). Eg. dev.sws.aws.sikt.no or sws.aws.sikt.no.
    Default: dev.sws.aws.sikt.no
    AllowedValues:
      - dev.sws.aws.sikt.no
      - sandbox.sws.aws.sikt.no
      - sws.aws.sikt.no
  CertificateArn:
    Type: String
    Description: ARN for the certificate covering the API host/domain/API Gateway Custom Domain. The value is stored in Region us-east-1.
  BackupBucketArn:
   Type: String
   Description: Arn of the S3 bucket for olensearch buckups

Resources:
  ApiDomainNameParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Description: Hostname for API Gateway Custom Domain
      Name: /SWS/ApiDomain
      Type: String
      Value: !Ref ApiDomain
  CustomDomainNameParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Description: The custom domain for the enviorment without service related prefix.
      Name: /SWS/CustomDomain
      Type: String
      Value: !Ref CustomDomain
  SwsDeployStackRoleParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Description: Role for stack deployment
      Name: /Deployment/SwsDeployStackRoleArn
      Type: String
      Value: !GetAtt SwsDeployStackRole.Arn

  SwsPipeline:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - SwsDeployStackRoleParameter
      - ApiDomainNameParameter
      - CustomDomainNameParameter
    Properties:
      Parameters:
        DeployParameterOverrides: !Sub '
        {
          "CustomDomain":"${CustomDomain}",
          "ElasticSearchSize":"${ElasticSearchSize}", 
          "UserPoolDomainPrefix":"${UserPoolDomainPrefix}",
          "BackupBucketArn":"${BackupBucketArn}"
        }'
        GitHubRepo: search-workspace-service
        GitHubBranch: main
        UseManualApproval: !Ref UseManualApproval
        RequiresDocker: true
      TemplateURL: !Sub 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/continuous_build_pipeline.yml'
      TimeoutInMinutes: 60


  # This is used in the continuous-build-pipeline, and it is defined here and not in the
  # continuous-build-pipeline in the case we want to delete the service stack (e.g. publication service)
  # after we have deleted the pipeline stack.
  SwsDeployStackRole:
    Type: AWS::IAM::Role
    Properties:
      Description: Role to allow Cloudformation to deploy stack
      RoleName: !Sub 'SwsDeployStacksRole-${AWS::Region}'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service: [ cloudformation.amazonaws.com ]
      Path: /
      Policies:
        - PolicyName: DeployLambdaPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                Effect: Allow
                Resource:
                  - "*"
              - Action:
                  - application-autoscaling:DescribeScheduledActions
                  - application-autoscaling:DescribeScalableTargets
                  - application-autoscaling:RegisterScalableTarget
                  - application-autoscaling:DeregisterScalableTarget
                  - application-autoscaling:DescribeScalingPolicies
                  - application-autoscaling:DescribeScalingPolicies
                  - application-autoscaling:PutScalingPolicy
                  - application-autoscaling:DeleteScalingPolicy
                  - autoscaling:DeleteScalingPolicy
                  - cloudwatch:PutMetricAlarm
                  - cloudwatch:DeleteAlarms
                  - cloudwatch:DescribeAlarms
                  - cloudformation:CreateChangeSet
                  - cloudfront:UpdateDistribution
                  - codedeploy:CreateApplication
                  - codedeploy:DeleteApplication
                  - codedeploy:CreateDeploymentGroup
                  - codedeploy:UpdateDeploymentGroup
                  - codedeploy:DeleteDeploymentGroup
                  - codedeploy:GetDeploymentConfig
                  - codedeploy:RegisterApplicationRevision
                  - codedeploy:CreateDeployment
                  - codedeploy:GetDeployment
                  - cognito-idp:*
                  - cognito-identity:*
                  - iam:AttachRolePolicy
                  - iam:GetRole
                  - iam:CreateRole
                  - iam:PassRole
                  - iam:DeleteRole
                  - iam:DetachRolePolicy
                  - iam:PutRolePolicy
                  - iam:DeleteRolePolicy
                  - iam:GetRolePolicy
                  - iam:UpdateAssumeRolePolicy
                  - iam:CreateServiceLinkedRole
                  - dynamodb:DescribeTable
                  - dynamodb:CreateTable
                  - dynamodb:UpdateTable
                  - dynamodb:DescribeContinuousBackups
                  - dynamodb:UpdateContinuousBackups
                  - dynamodb:DeleteTable
                  - events:PutRule
                  - lambda:*
                  - logs:CreateLogGroup
                  - logs:DeleteLogGroup
                  - logs:DescribeLogGroups
                  - logs:ListTagsLogGroup
                  - apigateway:GET
                  - apigateway:PUT
                  - apigateway:POST
                  - apigateway:DELETE
                  - apigateway:PATCH
                  - apigateway:UpdateRestApiPolicy
                  - ec2:DescribeSubnets
                  - ec2:DescribeSecurityGroups
                  - ec2:DescribeVpcs
                  - es:CreateElasticsearchDomain
                  - es:DeleteElasticsearchDomain
                  - es:DescribeElasticsearchDomain
                  - es:UpdateElasticsearchDomainConfig
                  - es:ListTags
                  - s3:CreateBucket
                  - s3:PutLifecycleConfiguration
                  - s3:DeleteBucket
                  - s3:PutBucketVersioning
                  - s3:PutBucketCORS
                  - s3:PutBucketPolicy
                  - s3:DeleteBucketPolicy
                  - s3:PutBucketNotification
                  - ses:CreateEmailIdentity
                  - ses:PutEmailIdentityDkimAttributes
                  - ses:DeleteEmailIdentity
                  - ses:PutEmailIdentityFeedbackAttributes
                  - ses:GetEmailIdentity
                  - sqs:CreateQueue
                  - sqs:GetQueueAttributes
                  - sqs:DeleteQueue
                  - events:DeleteRule
                  - events:DescribeRule
                  - events:ListRules
                  - events:PutRule
                  - events:PutTargets
                  - events:RemoveTargets
                  - events:CreateEventBus
                  - events:DeleteEventBus
                  - events:DescribeEventBus
                  - sqs:CreateQueue
                  - sqs:GetQueueAttributes
                  - sqs:DeleteQueue
                  - ssm:PutParameter
                  - ssm:GetParameter
                  - ssm:DeleteParameter
                  - ssm:AddTagsToResource
                  - secretsmanager:DeleteSecret
                  - secretsmanager:GetRandomPassword
                  - secretsmanager:CreateSecret
                  - secretsmanager:TagResource
                  - secretsmanager:GetSecretValue
                Effect: Allow
                Resource: "*"
              - Action:
                  - ssm:GetSecretValue
                  - ssm:GetParameters
                Effect: Allow
                Resource: '*'
              - Action:
                  - secretsmanager:GetSecretValue
                Effect: Allow
                Resource: '*'
  ApiGwAccountConfig:
    Type: "AWS::ApiGateway::Account"
    Properties:
      CloudWatchRoleArn: !GetAtt ApiGatewayLoggingRole.Arn
  ApiGatewayLoggingRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "apigateway.amazonaws.com"
            Action: "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - !Sub "arn:${AWS::Partition}:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
  DomainName:
    Type: AWS::ApiGateway::DomainName
    Properties:
      CertificateArn: !Ref CertificateArn
      DomainName: !Sub api.${CustomDomain}
      EndpointConfiguration:
        Types:
          - EDGE